{"is_source_file": true, "format": "TypeScript", "description": "This file defines an API client class using axios for HTTP requests, including configurations, interceptors, and methods for CRUD operations, along with response/error handling.", "external_files": ["axios"], "external_methods": ["axios.create", "localStorage.getItem", "localStorage.removeItem", "window.location.href"], "published": ["ApiClient"], "classes": [{"name": "ApiClient", "description": "A singleton class managing API requests with methods for GET, POST, PUT, DELETE, and handling of authentication tokens and errors."}], "methods": [{"name": "public static getInstance(): ApiClient { getInstance", "description": "Returns the singleton instance of ApiClient, creating it if it doesn't exist.", "scope": "ApiClient", "scopeKind": "class"}, {"name": "async get<T>(url: string, params?: object): Promise<ApiResponse<T>> { get", "description": "Performs a GET request to the specified URL with optional parameters, returns a typed ApiResponse.", "scope": "ApiClient", "scopeKind": "class"}, {"name": "async post<T>(url: string, data?: any): Promise<ApiResponse<T>> { post", "description": "Performs a POST request to the specified URL with optional data, returns a typed ApiResponse.", "scope": "ApiClient", "scopeKind": "class"}, {"name": "async put<T>(url: string, data?: any): Promise<ApiResponse<T>> { put", "description": "Performs a PUT request to the specified URL with optional data, returns a typed ApiResponse.", "scope": "ApiClient", "scopeKind": "class"}, {"name": "async delete<T>(url: string): Promise<ApiResponse<T>> { delete", "description": "Performs a DELETE request to the specified URL, returns a typed ApiResponse.", "scope": "ApiClient", "scopeKind": "class"}, {"name": "private handleError(error: AxiosError<ErrorResponse>): ErrorResponse { handleError", "description": "Extracts and formats error information from AxiosError, including handling 401 unauthorized errors.", "scope": "ApiClient", "scopeKind": "class"}, {"name": "private constructor() { constructor", "scope": "ApiClient", "scopeKind": "class", "description": "unavailable"}], "calls": ["axios.create", "localStorage.getItem", "localStorage.removeItem", "window.location.href", "this.client.get", "this.client.post", "this.client.put", "this.client.delete"], "search-terms": ["axios API client", "singleton API wrapper", "interceptors", "auth token management", "TypeScript API class"], "state": 2, "file_id": 22, "knowledge_revision": 68, "git_revision": "", "revision_history": [{"62": ""}, {"67": ""}, {"68": ""}], "ctags": [{"_type": "tag", "name": "ApiClient", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^class ApiClient {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "ApiResponse", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^export interface ApiResponse<T = any> {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "ErrorResponse", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^export interface ErrorResponse {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  private client: AxiosInstance;$/", "language": "TypeScript", "kind": "property", "scope": "ApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  private constructor() {$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  data: T;$/", "language": "TypeScript", "kind": "property", "scope": "ApiResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  async delete<T>(url: string): Promise<ApiResponse<T>> {$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  details?: Record<string, unknown>;$/", "language": "TypeScript", "kind": "property", "scope": "ErrorResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  error?: string;$/", "language": "TypeScript", "kind": "property", "scope": "ErrorResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  async get<T>(url: string, params?: object): Promise<ApiResponse<T>> {$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "getInstance", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  public static getInstance(): ApiClient {$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "handleError", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  private handleError(error: AxiosError<ErrorResponse>): ErrorResponse {$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "instance", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  private static instance: ApiClient;$/", "language": "TypeScript", "kind": "property", "scope": "ApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  message: string;$/", "language": "TypeScript", "kind": "property", "scope": "ErrorResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  message?: string;$/", "language": "TypeScript", "kind": "property", "scope": "ApiResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  async post<T>(url: string, data?: any): Promise<ApiResponse<T>> {$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "put", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  async put<T>(url: string, data?: any): Promise<ApiResponse<T>> {$/", "language": "TypeScript", "kind": "method", "scope": "ApiClient", "scopeKind": "class"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^      const response = await this.client.delete<T>(url);$/", "language": "TypeScript", "kind": "constant", "scope": "ApiClient.delete", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^      const response = await this.client.get<T>(url, { params });$/", "language": "TypeScript", "kind": "constant", "scope": "ApiClient.get", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^      const response = await this.client.post<T>(url, data);$/", "language": "TypeScript", "kind": "constant", "scope": "ApiClient.post", "scopeKind": "method"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^      const response = await this.client.put<T>(url, data);$/", "language": "TypeScript", "kind": "constant", "scope": "ApiClient.put", "scopeKind": "method"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  status: number;$/", "language": "TypeScript", "kind": "property", "scope": "ApiResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^  status: number;$/", "language": "TypeScript", "kind": "property", "scope": "ErrorResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/unified-jira-confluence-interface-146751-146760/integration_frontend/src/lib/api/client.ts", "pattern": "/^        const token = localStorage.getItem('auth_token');$/", "language": "TypeScript", "kind": "constant", "scope": "ApiClient.constructor", "scopeKind": "method"}], "hash": "32016f3a529913698920fa96831c5ee2", "format-version": 4, "code-base-name": "integration_frontend", "filename": "integration_frontend/src/lib/api/client.ts", "fields": [{"name": "export interface ApiResponse<T = any> {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface ErrorResponse {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "private client: AxiosInstance;", "scope": "ApiClient", "scopeKind": "class", "description": "unavailable"}, {"name": "data: T;", "scope": "ApiResponse", "scopeKind": "interface", "description": "unavailable"}, {"name": "details?: Record<string, unknown>;", "scope": "ErrorResponse", "scopeKind": "interface", "description": "unavailable"}, {"name": "error?: string;", "scope": "ErrorResponse", "scopeKind": "interface", "description": "unavailable"}, {"name": "private static instance: ApiClient;", "scope": "ApiClient", "scopeKind": "class", "description": "unavailable"}, {"name": "message: string;", "scope": "ErrorResponse", "scopeKind": "interface", "description": "unavailable"}, {"name": "message?: string;", "scope": "ApiResponse", "scopeKind": "interface", "description": "unavailable"}, {"name": "status: number;", "scope": "ApiResponse", "scopeKind": "interface", "description": "unavailable"}]}